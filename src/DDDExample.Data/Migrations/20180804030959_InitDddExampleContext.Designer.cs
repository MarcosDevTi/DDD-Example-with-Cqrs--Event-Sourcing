// <auto-generated />
using System;
using DDDExample.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDDExample.Data.Migrations
{
    [DbContext(typeof(DddExampleContext))]
    [Migration("20180804030959_InitDddExampleContext")]
    partial class InitDddExampleContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DDDExample.Domain.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DDDExample.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Closed");

                    b.Property<Guid?>("CustomerId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DDDExample.Domain.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("OrderId");

                    b.Property<Guid?>("ProductId");

                    b.Property<int>("Qtd");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DDDExample.Domain.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(80);

                    b.Property<decimal>("Price")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DDDExample.Domain.Models.Customer", b =>
                {
                    b.OwnsOne("DDDExample.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid?>("CustomerId");

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasMaxLength(100);

                            b1.Property<string>("Number")
                                .HasColumnName("Number")
                                .HasMaxLength(20);

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasMaxLength(120);

                            b1.Property<string>("ZipCode")
                                .HasColumnName("ZipCode")
                                .HasMaxLength(30);

                            b1.ToTable("Customers");

                            b1.HasOne("DDDExample.Domain.Models.Customer")
                                .WithOne("Address")
                                .HasForeignKey("DDDExample.Domain.ValueObjects.Address", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DDDExample.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid?>("CustomerId");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasMaxLength(150);

                            b1.ToTable("Customers");

                            b1.HasOne("DDDExample.Domain.Models.Customer")
                                .WithOne("Email")
                                .HasForeignKey("DDDExample.Domain.ValueObjects.Email", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DDDExample.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid?>("CustomerId");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasMaxLength(40);

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnName("LastName")
                                .HasMaxLength(120);

                            b1.ToTable("Customers");

                            b1.HasOne("DDDExample.Domain.Models.Customer")
                                .WithOne("Name")
                                .HasForeignKey("DDDExample.Domain.ValueObjects.Name", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("DDDExample.Domain.Models.Order", b =>
                {
                    b.HasOne("DDDExample.Domain.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("DDDExample.Domain.Models.OrderItem", b =>
                {
                    b.HasOne("DDDExample.Domain.Models.Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("DDDExample.Domain.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
